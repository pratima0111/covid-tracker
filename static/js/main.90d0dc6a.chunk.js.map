{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.module.css","components/Table/Table.module.css","api/index.js","components/Chart/Chart.jsx","components/Cards/Cards.jsx","components/CountryPicker/CountryPicker.jsx","components/Footer/Footer.jsx","components/IndiaData/IndiaData.js","components/Table/Table.jsx","App.js","index.js","components/Footer/Footer.module.css"],"names":["module","exports","url","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchStateData","response","fetchIndiaData","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","value","options","legend","display","title","text","className","styles","container","Cards","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","variant","start","end","duration","separator","Date","toDateString","CountryPicker","handleCountryChange","fetchedCountries","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","Footer","footerlink","href","IndiaData","indiaData","setIndiaData","indiadata","confirmpercent","toFixed","recoveredpercent","deathpercent","percent","MyTable","stateData","setStateData","FetchAPI","StyledTableCell","withStyles","theme","head","palette","common","black","white","body","fontSize","TableCell","useStyles","makeStyles","table","minWidth","dataa","classes","currentValue","setValue","Paper","aria-label","dropDown","event","tableContainer","row","provinceState","scope","tableHead","align","active","particlesOptions","particles","App","state","fetchedData","setState","fetchedIndiaData","this","params","id","src","alt","indiaconfirmed","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90d0dc6a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3cukk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__1ucLb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__2E3fa\",\"card\":\"Cards_card__1p6oM\",\"cardlist2\":\"Cards_cardlist2__3q9YE\",\"infected\":\"Cards_infected__1wT_D\",\"recovered\":\"Cards_recovered__1e1zV\",\"deaths\":\"Cards_deaths__oQJcP\",\"percent\":\"Cards_percent__3X9G8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Table_container__3mntg\",\"stateHeading\":\"Table_stateHeading__Xb4Mk\",\"dropDown\":\"Table_dropDown__16-bd\",\"tableContainer\":\"Table_tableContainer__2Ijn9\",\"tableHead\":\"Table_tableHead__9572J\"};","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\nconst indiaUrl='https://covid19.mathdro.id/api/countries/India/confirmed';\r\n\r\nexport const fetchData = async(country) => {\r\n\r\n    let changeableUrl = url;\r\n\r\n    if(country){\r\n        changeableUrl = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try{\r\n\r\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl);\r\n\r\n        return {confirmed, recovered, deaths, lastUpdate};\r\n       \r\n    } catch(error) {\r\n        console.log(error);   \r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n        try{\r\n            const {data} = await axios.get(`${url}/daily`);\r\n            const modifiedData = data.map((dailyData) => ({\r\n                confirmed: dailyData.confirmed.total,\r\n                deaths: dailyData.deaths.total,\r\n                date: dailyData.reportDate,\r\n            }));\r\n            \r\n            return modifiedData;\r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n    export const fetchStateData = async () => {\r\n        try{\r\n            const response = await axios.get(`${indiaUrl}`);\r\n            return response;\r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n    export const fetchIndiaData = async () => {\r\n        try{\r\n            const response = await axios.get(`${url}/countries/india`);\r\n            return response;\r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\nexport const fetchCountries = async () => {\r\n    try{\r\n        const {data: {countries}} = await axios.get(`${url}/countries`);\r\n        // console.log(countries)\r\n        return countries.map((country)=> country.name);\r\n\r\n    } catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country}) => {\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        const fetchAPI = async() => {\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        // console.log(dailyData);\r\n\r\n        fetchAPI();\r\n\r\n    }, []);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ?(\r\n            <Line\r\n            data = {{\r\n                labels: dailyData.map(({date})=>  date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed})=>  confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill:true,\r\n        \r\n\r\n                },\r\n                {\r\n                    data: dailyData.map(({deaths})=>  deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n                    fill:true,\r\n\r\n                }],\r\n            }}\r\n            />\r\n\r\n        ): null\r\n     \r\n\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed?\r\n        (\r\n            <Bar\r\n                data={{labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [\r\n                    {\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data: [confirmed.value, recovered.value, deaths.value],\r\n                    }\r\n                ],\r\n                }}\r\n                options={{\r\n                legend: { display: false },\r\n                title: { display: true, text: `Current state in ${country}` },\r\n                }}\r\n            />\r\n\r\n        ): null\r\n    );\r\n\r\n    // console.log(confirmed, recovered, deaths);\r\n        \r\n  \r\n    return (\r\n        <div className={styles.container}>\r\n\r\n            {country? barChart: lineChart}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart;","import React from 'react';\nimport styles from \"./Cards.module.css\"\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from \"classnames\";\n\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\n\n\n    if(!confirmed){\n        return 'Loading...';\n    }\n    return (\n        <div className=\"container\">\n            <Grid container spacing={5} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\">Confirmed </Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp\n                                start={0}\n                                end={confirmed.value}\n                                duration={1.7}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\">Recovered </Typography>\n                        <Typography variant=\"h5\">\n                        <CountUp\n                                start={0}\n                                end={recovered.value}\n                                duration={1.7}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\n                    </CardContent>\n\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\">Deaths </Typography>\n                        <Typography variant=\"h5\"> \n                            <CountUp\n                                start={0}\n                                end={deaths.value}\n                                duration={1.7}\n                                separator=\",\"\n                            />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths from COVID-19</Typography>\n                    </CardContent>\n\n                </Grid>\n\n            </Grid>\n            \n\n        </div>\n    )\n}\n\nexport default Cards;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api/index.js';\r\n\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange}) => {\r\n    \r\n    const [fetchedCountries, setCountries] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchAPI = async () => {\r\n\r\n            setCountries(await fetchCountries());\r\n        }\r\n\r\n        fetchAPI();\r\n    \r\n    }, [setCountries]);\r\n\r\n    // console.log(fetchCountries);\r\n\r\n    return (\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    )\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport styles from './Footer.module.css';\r\n\r\n\r\nconst Footer =()=>{\r\n    return (\r\n        <div className={styles.container}>\r\n            \r\n            {/* <p className={styles.link}>   --{'>'}  </p> */}\r\n            <a className={styles.footerlink} href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\">Click here to know more about COVID-19 pandemic </a>\r\n            \r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Footer;","import React, {useState,useEffect} from 'react';\nimport styles from \"../Cards/Cards.module.css\"\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport cx from \"classnames\";\nimport {fetchIndiaData } from \"../../api\";\n\n\nconst IndiaData = ({data:{confirmed, recovered, deaths, lastUpdate}}) => {\n\n    /**   extra       */\n    const [indiaData,setIndiaData]=useState({});\n    useEffect(()=>{\n        const fetchAPI =async() =>{\n            setIndiaData(await fetchIndiaData());\n        };\n        fetchAPI();\n    },[]);\n\n    const indiadata=indiaData.data;\n\n    /**    end  */\n\n\n    if(!confirmed){\n        return 'Loading...';\n    }\n    var confirmpercent = (indiadata.confirmed.value * 100 / confirmed.value).toFixed(0)\n    var recoveredpercent = (indiadata.recovered.value * 100 / recovered.value).toFixed(0)\n    var deathpercent = (indiadata.deaths.value * 100 / deaths.value).toFixed(0)\n    return (\n        <div className=\"container\">\n                {/* <img src=\"https://i.ibb.co/7QpKsCX/image.png\" alt=\"covid-19\" className=\"image\"/> */}\n                <Grid container spacing={4} justify=\"center\" >\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" >Confirmed</Typography>\n                            <Typography variant=\"h5\"><CountUp start={0} end={indiadata.confirmed.value} duration={2} separator=\",\" /></Typography>\n                            <Typography className={styles.percent} ><CountUp start={0} end={confirmpercent} duration={2} />% of Global Cases...</Typography>\n                            <Typography color=\"textSecondary\" >{new Date(lastUpdate).toDateString()}</Typography>\n                            <Typography variant=\"body2\">Number of active cases of COVID-19 in INDIA</Typography>\n\n\n                        </CardContent>\n                    </Grid>\n                    <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" >Recovered </Typography>\n                            <Typography variant=\"h5\"><CountUp start={0} end={indiadata.recovered.value} duration={2} separator=\",\" /></Typography>\n                            <Typography className={styles.percent}><CountUp start={0} end={recoveredpercent} duration={2} />% of Global cases...</Typography>\n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                            <Typography variant=\"body2\">Number of recovered cases of COVID-19 in INDIA</Typography>\n\n                        </CardContent>\n                    </Grid>\n                    <Grid item component={Card} xs={12} md={3}  className={cx(styles.card, styles.deaths)}>\n                        <CardContent>\n                            <Typography color=\"textSecondary\" >Deaths  </Typography>\n                            <Typography variant=\"h5\"><CountUp start={0} end={indiadata.deaths.value} duration={2} separator=\",\" /></Typography>\n                            <Typography className={styles.percent}><CountUp start={0} end={deathpercent} duration={2} />% of Global Cases...</Typography>\n                            \n                            <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                            <Typography variant=\"body2\">Number of deaths from COVID-19 in INDIA</Typography>\n\n                        </CardContent>\n                    </Grid>\n\n                </Grid>\n                <br></br>\n            \n        </div>\n    )\n    }\n\nexport default IndiaData;","\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\n// import Table from '@material-ui/core/Table';\n// import TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n\n// import TableRow from '@material-ui/core/TableRow';\n// import TableColoumn from '@material-ui/core/TableColoumn';\nimport {NativeSelect} from '@material-ui/core';\n\nimport { fetchStateData } from '../../api';\nimport styles from './Table.module.css';\nimport './Table.module.css';\n\nconst MyTable = () => {\n    // React Hooks\n    const [stateData, setStateData] = useState([])\n\n    useEffect(() => {\n        const FetchAPI = async () => {\n\n            setStateData(await fetchStateData())\n\n        }\n        FetchAPI()\n\n    }, [])\n\n    /* in built styling of material UI*/\n    const StyledTableCell = withStyles((theme) => ({\n        head: {\n            backgroundColor: theme.palette.common.black,\n            color: theme.palette.common.white,\n        },\n        body: {\n            fontSize: 14,\n        },\n    }))(TableCell);\n\n    // const StyledTableRow = withStyles((theme) => ({\n    //     root: {\n    //         '&:nth-of-type(odd)': {\n    //             backgroundColor: theme.palette.action.hover,\n    //         },\n    //     },\n    // }))(TableRow);\n    const useStyles = makeStyles({\n        table: {\n            minWidth: 100,\n        },\n    });\n    /*end of inbuilt styling of material UI*/\n\n\n\n\n    \n    const dataa = stateData.data\n    const classes = useStyles();\n    const [currentValue,setValue]= useState('');\n    console.log(currentValue);\n    const handleStateChange=(event)=>{\n        setValue(event);\n        console.log(currentValue);\n    }\n    \n    \n\n    return (\n\n        <div className={styles.container}>\n            <div component={Paper}>\n                <div className={classes.table}  aria-label=\"sticky table\">\n                    {/* <TableHead>\n                        <TableColoumn>\n                            <StyledTableCell width='100'>States</StyledTableCell>\n                            <StyledTableCell align=\"left\" width='50'>Confirmed</StyledTableCell>\n                            <StyledTableCell align=\"left\" width='50'>Active</StyledTableCell>\n\n                            <StyledTableCell align=\"left\" width='50'>Rcvrd</StyledTableCell>\n                            <StyledTableCell align=\"left\" width='50'>Deaths</StyledTableCell>\n                        </TableColoumn>\n                    </TableHead> */}\n                    <div  >\n                        \n                        \n                        {/* <select id =\"dropdown\" value={currentValue}  defaultValue='Maharashtra' >\n                            <option value=\"Maharashtra\">Maharashtra</option>\n                            <option value=\"Bihar\">Bihar</option>\n                \n                        </select> */}\n                        {/* <p className= {styles.stateWise}   >State-Wise Data</p> */}\n                        <div   className={styles.dropDown} >\n                            \n                        <NativeSelect  defaultValue=\"\" onChange={(e) => handleStateChange(e.target.value)}>\n                            <option value=\"\">SELECT ANY STATE</option>\n                            <option value=\"Andaman and Nicobar Islands\">Andaman and Nicobar Islands</option>\n                            <option value=\"Andhra Pradesh\">Andhra Pradesh</option>\n                            <option value=\"Arunachal Pradesh\">Arunachal Pradesh</option>\n                            <option value=\"Assam\">Assam</option>\n                            <option value=\"Bihar\">Bihar</option>\n                            <option value=\"Chandigarh\">Chandigarh</option>\n                            <option value=\"Chhattisgarh\">Chhattisgarh</option>\n                            <option value=\"Dadra and Nagar Haveli\">Dadra and Nagar Haveli and Daman and Diu</option>\n                            <option value=\"Delhi\">Delhi</option>\n                            <option value=\"Goa\">Goa</option>\n                            <option value=\"Gujarat\">Gujarat</option>\n                            <option value=\"Haryana\">Haryana</option>\n                            <option value=\"Himachal Pradesh\">Himachal Pradesh</option>\n                            <option value=\"Jammu and Kashmir\">Jammu and Kashmir</option>\n                            <option value=\"Jharkhand\">Jharkhand</option>\n                            <option value=\"Karnataka\">Karnataka</option>\n                            <option value=\"Kerala\">Kerala</option>\n                            <option value=\"Ladakh\">Ladakh</option>\n                            <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\n                            <option value=\"Maharashtra\">Maharashtra</option>\n                            <option value=\"Manipur\">Manipur</option>\n                            <option value=\"Meghalaya\">Meghalaya</option>\n                            <option value=\"Mizoram\">Mizoram</option>\n                            <option value=\"Nagaland\">Nagaland</option>\n                            <option value=\"Odisha\">Odisha</option>\n                            <option value=\"Puducherry\">Puducherry</option>\n                            <option value=\"Punjab\">Punjab</option>\n                            <option value=\"Rajasthan\">Rajasthan</option>\n                            <option value=\"Sikkim\">Sikkim</option>\n                            <option value=\"Tamil Nadu\">Tamil Nadu</option>\n                            <option value=\"Telangana\">Telangana</option>\n                            <option value=\"Tripura\">Tripura</option>\n                            <option value=\"Uttaranchal\">Uttaranchal</option>\n                            <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\n                            <option value=\"West Bengal\">West Bengal</option>\n                            \n                            \n                        </NativeSelect>\n                        </div>\n\n\n\n                       <br></br>\n                       <div  className={styles.tableContainer}>\n                           \n\n                            {dataa && dataa.map((row) => (\n                                <div  key={row.provinceState}>\n                                    \n                                    {row.provinceState===currentValue\n                                    ?<>\n                            \n                                        <StyledTableCell  className=\"StateHeading\" component=\"th\" scope=\"row\">\n                                        <span className={styles.tableHead}  >STATE :  {row.provinceState} </span>\n                                        </StyledTableCell><br></br>\n                                        <StyledTableCell align=\"center\"><div className={styles.tableHead}>CONFIRMED  :  {row.confirmed}</div></StyledTableCell><br></br>\n                                        <StyledTableCell align=\"center\"><span className={styles.tableHead}>ACTIVE  :  {row.active} </span></StyledTableCell><br></br>\n                                        <StyledTableCell align=\"center\"><span className={styles.tableHead}>RECOVERED  :  {row.recovered}</span></StyledTableCell><br></br>\n                                        <StyledTableCell align=\"center\"><span className={styles.tableHead}>DEATHS  :  {row.deaths}</span></StyledTableCell><br></br>\n                                   \n                                    </>\n                                    :<></>\n                                    }\n\n                                </div>\n                            ))}\n                            <br></br>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n    )\n}\nexport default MyTable;\n\n","import React from 'react';\n// import Cards from './components/Cards/Cards.jsx';\n// import Chart from './components/Chart/Chart.jsx';\n// import CountryPicker from './components/CountryPicker/CountryPicker.jsx';\n\nimport {Chart, Cards, CountryPicker} from './components';\nimport './App.css';\nimport {fetchData, fetchIndiaData} from './api';\nimport Particles from 'react-particles-js';\nimport Footer from './components/Footer/Footer.jsx';\n\n\n// import CardsInd from './components/CardsInd/CardsInd';\nimport IndiaData from './components/IndiaData/IndiaData';\nimport MyTable from './components/Table/Table';\n\n\n\n\n\n\nconst particlesOptions ={\n    particles:{\n        \"number\": {\n            \"value\": 160,\n            \"density\": {\n                \"enable\": false\n            }\n        },\n        \"size\": {\n            \"value\": 10,\n            \"random\": true\n        },\n        \"move\": {\n            \"direction\": \"bottom\",\n            \"out_mode\": \"out\"\n        },\n        \"line_linked\": {\n            \"enable\": false\n        }\n    },\n    \"interactivity\": {\n        \"events\": {\n            \"onclick\": {\n                \"enable\": true,\n                \"mode\": \"remove\"\n            }\n        },\n        \"modes\": {\n            \"remove\": {\n                \"particles_nb\": 10\n            }\n        }\n    }\n  }\n\n\nclass App extends React.Component {\n\n    state = {\n        data: {},\n        country: '',\n\n      \n        indiaData: null,\n    \n\n    }\n    // onShowIndiaClick=()=>{\n    //     this.setState({showIndia:true})\n    //     this.setState({showGlobal:false})\n    // }\n    // onShowGlobalClick= async()=>{\n    //     this.setState({ showIndia: false })\n    //     this.setState({ showGlobal: true })\n    //     // this.setState({glc:true})\n    // }\n    async componentDidMount(){\n        const fetchedData = await fetchData();\n        const fetchedIndiaData = await fetchIndiaData();\n\n        \n     \n       \n    \n        this.setState({data : fetchedData});\n        this.setState({ indiaData: fetchedIndiaData.data.confirmed.value })\n        \n\n\n    }\n    \n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        this.setState({data : fetchedData, country: country});\n        //fetch the data\n        //set the state\n      \n    }\n\n   \n\n    render(){\n\n        const {data, country} = this.state;\n        return (\n            <div className= \"container\">\n                <Particles  className='particles'\n                     params={particlesOptions}/>\n\n                \n                <ul className='navbar' >\n                    <li><a href=\"#global\">Global Stats</a></li>\n                    <li><a href=\"#indian\">Indian Stats</a></li><br></br>\n                    <li id=\"right\">COVID-19 TRACKER</li>\n                </ul>\n               <br></br>\n                \n                \n\n\n\n                <img src=\"https://i.ibb.co/7QpKsCX/image.png\" alt=\"covid-19\" className=\"image\"/>\n                {/* <button onClick={this.onShowIndiaClick}  > India </button>\n                <button onClick={this.componentDidMount}  > India </button> */}\n              \n                    <h2 id=\"indian\" className=\"heading\">COVID STATS IN INDIA</h2>\n                    <IndiaData data={data}  indiaconfirmed={this.state.indiadata} />\n                    <br></br>\n                    <p className=\"heading\" id=\"select\">Select any state to see that state's data</p>\n                    <MyTable />\n          \n                     <h2 id=\"global\" className=\"heading\">COVID STATS GLOBALLY</h2>\n                     <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                     <Cards data={data}    />\n                    \n                    \n                    {/* <CountryPicker handleCountryChange={this.handleCountryChange}/> */}\n                    <Chart data={data} country={country} />\n\n                    <br>\n                    </br>\n\n                    <Footer/>\n        \n\n\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Footer_container__2gpwN\",\"footerlink\":\"Footer_footerlink__gkZfY\"};"],"sourceRoot":""}